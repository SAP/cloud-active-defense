version: '3'
services:

  myapp:
    container_name: myapp
    build: myapp
    image: myapp
    
  config:
    container_name: configmanager
    build: configmanager
    image: configmanager
    volumes:
    - ./configmanager/data:/data
    - configvolume:/data/blocklist
    ports:
      - "3000:3000"
    environment:
      - CONTROLPANEL_API_URL=http://controlpanel-api:8050
      
  proxy:
    container_name: proxy
    build: proxy
    image: proxy
    ports:
    - "8000:8000"
    depends_on:
    - myapp
    - clone
    - exhaust
    - fluent
    logging:
      driver: fluentd
  
  fluent:
    container_name: fluentbit
    image: fluent/fluent-bit:3.0
    volumes:
      - ./fluentbit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./fluentbit/parsers.conf:/fluent-bit/etc/custom_parsers.conf
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    environment:
      - CONTROLPANEL_API_URL=controlpanel-api

  clone:
    container_name: clone
    build: clone
    image: clone
    depends_on:
      - fluent
    logging:
      driver: fluentd

  exhaust:
    container_name: exhaust
    build: exhaust
    image: exhaust
    depends_on:
      - fluent
    logging:
      driver: fluentd
  
  # controlpanel-api-dev:
  #   container_name: controlpanel-api-dev
  #   build: 
  #     context: controlpanel/api
  #     dockerfile: Dockerfile-dev
  #   image: api-dev
  #   ports:
  #     - 8050:8050
  #   depends_on:
  #     config:
  #       condition: service_started
  #     controlpanel-db:
  #       condition: service_healthy
  #     fluent:
  #       condition: service_started
  #   volumes:
  #     - ./controlpanel/api:/app:cached
  #     - /app/node_modules

  # controlpanel-dev:
  #   container_name: controlpanel-dev
  #   build: 
  #     context: controlpanel/cad
  #     dockerfile: Dockerfile-dev
  #   image: controlpanel-dev
  #   ports: 
  #   - 4200:4200
  #   depends_on:
  #     - controlpanel-api-dev
  #   volumes:
  #     - ./controlpanel/cad:/app
  #     - /app/node_modules
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true

  controlpanel-api:
    container_name: controlpanel-api
    build: 
      context: controlpanel/api
      dockerfile: Dockerfile
    # image: ghcr.io/sap/controlpanel-api:latest
    ports:
      - 8050:8050
    depends_on:
      config:
        condition: service_started
      controlpanel-db:
        condition: service_healthy
      fluent:
        condition: service_started
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=controlpanel-db
      - DB_PORT=5432
      - CRON_CONFIGMANAGER=60
      - CONTROLPANEL_FRONTEND_URL=http://localhost
      - CONFIGMANAGER_URL=http://configmanager:3000

  controlpanel:
    container_name: controlpanel
    build:
      context: controlpanel/cad
      dockerfile: Dockerfile
    # image: ghcr.io/sap/controlpanel-frontend:latest
    ports: 
    - 80:80
    depends_on:
      - controlpanel-api
    environment:
      - CONTROLPANEL_API_URL=http://localhost:8050

  controlpanel-db:
    image: postgres
    restart: always
    container_name: controlpanel-db
    ports:
    - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cad
    volumes:
    - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  configvolume: {}
  postgres_data:
