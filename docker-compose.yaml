version: '3'
services:

  myapp:
    container_name: myapp
    build: myapp
    image: myapp
    
      
  proxy:
    container_name: proxy
    build: proxy
    image: proxy
    ports:
    - "8000:8000"
    depends_on:
      myapp:
        condition: service_started
      clone:
        condition: service_started
      exhaust:
        condition: service_started
      fluent:
        condition: service_started
      controlpanel-api:
        condition: service_healthy
    logging:
      driver: fluentd
  
  fluent:
    container_name: fluentbit
    image: fluent/fluent-bit:3.0
    volumes:
      - ./fluentbit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./fluentbit/parsers.conf:/fluent-bit/etc/custom_parsers.conf
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    environment:
      - CONTROLPANEL_API_URL=controlpanel-api
      - FLUENTBIT_API_KEY=A7nW2zQj9rMgP4kEmB5vDfL1sY6uHxVqJc0tKbR3wNp8oUiZhXlC2yFoGvTd9Sa8Nm

  clone:
    container_name: clone
    build: clone
    image: clone
    depends_on:
      - fluent
    logging:
      driver: fluentd

  exhaust:
    container_name: exhaust
    build: exhaust
    image: exhaust
    depends_on:
      - fluent
    logging:
      driver: fluentd
  
  # controlpanel-api-dev:
  #   container_name: controlpanel-api-dev
  #   build: 
  #     context: controlpanel/api
  #     dockerfile: Dockerfile-dev
  #   image: api-dev
  #   ports:
  #     - 8050:8050
  #   depends_on:
  #     controlpanel-db:
  #       condition: service_healthy
  #     fluent:
  #       condition: service_started
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:8050/health"]
  #     interval: 2s
  #     timeout: 5s
  #     retries: 10
  #   volumes:
  #     - ./controlpanel/api:/app:cached
  #     - /app/node_modules

  # controlpanel-dev:
  #   container_name: controlpanel-dev
  #   build: 
  #     context: controlpanel/cad
  #     dockerfile: Dockerfile-dev
  #   image: controlpanel-dev
  #   ports: 
  #   - 4200:4200
  #   depends_on:
  #     - controlpanel-api-dev
  #   volumes:
  #     - ./controlpanel/cad:/app
  #     - /app/node_modules
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true

  controlpanel-api:
    container_name: controlpanel-api
    build: 
      context: controlpanel/api
      dockerfile: Dockerfile
    # image: ghcr.io/sap/controlpanel-api:latest
    ports:
      - 8050:8050
    depends_on:
      controlpanel-db:
        condition: service_healthy
      fluent:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8050/health"]
      interval: 2s
      timeout: 5s
      retries: 10
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DB_HOST=controlpanel-db
      - DB_PORT=5432
      - CONTROLPANEL_FRONTEND_URL=http://localhost
      - ENVOY_API_KEY=F3mTzUj8nRbW4pQc7gHxN1AvD5sL6KfVZ0yPuJkE2R9qXi8MwB7lChGvTa1ZoS3Nd #If you want to set a custom key, don't forget to update the key in envoy.yaml!
      - FLUENTBIT_API_KEY=A7nW2zQj9rMgP4kEmB5vDfL1sY6uHxVqJc0tKbR3wNp8oUiZhXlC2yFoGvTd9Sa8Nm #If you want to set a custom key, don't forget to update the key in fluentbit config here!
      - KEYCLOAK_API_KEY=a7K9Z2pQw8X1sV4Lr6T0bN3yJ5GmC8HqW2E7D1S9U6F0PzK4M5xQ2vN8tR6wB3r9bv #If you want to set a custom key, don't forget to update the key in keycloak config here!

  controlpanel:
    container_name: controlpanel
    build:
      context: controlpanel/cad
      dockerfile: Dockerfile
    # image: ghcr.io/sap/controlpanel-frontend:latest
    ports: 
    - 80:80
    depends_on:
      - controlpanel-api
    environment:
      - CONTROLPANEL_API_URL=http://localhost:8050
      - KEYCLOAK_URL=http://host.docker.internal:8080

  controlpanel-db:
    image: postgres
    restart: always
    container_name: controlpanel-db
    ports:
    - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cad
    volumes:
    - controlpanel_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    build: keycloak
    # image: ghcr.io/sap/controlpanel-keycloak:latest
    container_name: keycloak
    ports:
      - "8080:8080"
      - "8443:8443"
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_DB_URL_HOST=keycloak-db
      - KC_HOSTNAME=http://host.docker.internal:8080
      - KC_HTTP_ENABLED=true
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - CONTROLPANEL_API_URL=http://controlpanel-api:8050
      - KEYCLOAK_API_KEY=a7K9Z2pQw8X1sV4Lr6T0bN3yJ5GmC8HqW2E7D1S9U6F0PzK4M5xQ2vN8tR6wB3r9bv
      - APP_URL=http://localhost
    depends_on:
      keycloak-db:
        condition: service_healthy

  keycloak-db:
    image: postgres
    restart: always
    container_name: keycloak-db
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak
    volumes:
    - keycloak_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  controlpanel_data:
  keycloak_data:
